package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.34

import (
	"context"
	"fmt"
	"gqlgen-ent/ent"
	"gqlgen-ent/graph"
)

// ID is the resolver for the id field.
func (r *postResolver) ID(ctx context.Context, obj *ent.Post) (string, error) {
	panic(fmt.Errorf("not implemented: ID - id"))
}

// Author is the resolver for the author field.
func (r *postResolver) Author(ctx context.Context, obj *ent.Post) (*ent.User, error) {
	return obj.Edges.AuthorOrErr()
}

// Posts is the resolver for the posts field.
func (r *queryResolver) Posts(ctx context.Context) ([]*ent.Post, error) {
	return r.client.Post.Query().All(ctx)
}

// Post is the resolver for the post field.
func (r *queryResolver) Post(ctx context.Context, id string) (*ent.Post, error) {
	return r.client.Post.Get(ctx, id)
}

// Post returns graph.PostResolver implementation.
func (r *Resolver) Post() graph.PostResolver { return &postResolver{r} }

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type postResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
